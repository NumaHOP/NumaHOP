variables:
    # NUMAHOP_DOCKER_TMP_REPO must be provided by gitlab, the complete name of the docker repository to use for the intermediate images
    # NUMAHOP_DOCKER_RESULT_REPO must be provided by gitlab, the complete name of the docker repository to use for the final image
    # NUMAHOP_DOCKER_MIRROR_REPO may be provided by gitlab, the complete name of a docker mirror repository
    # NUMAHOP_MAVEN_CONFIG may be provided by gitlab, the content of ~/.m2/settings.xml (e.g. for maven repository mirrors)
    # NUMAHOP_NPM_CONFIG may be provided by gitlab, the content of ~/.npmrc (e.g. for npm repository mirrors)
    # NUMAHOP_DOCKER_CONFIG may be provided by gitlab, the content of the ~/.docker/config.json (e.g. for docker repository credentials)
    # NUMAHOP_DEPLOY_PROJECT may be provided by gitlab, the name of a project with a deployment pipeline

    # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
    # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
    MAVEN_OPTS: '-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true'
    # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
    # when running from the command line.
    # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
    MAVEN_CLI_OPTS: '--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true'

    MAVEN_CONFIG_LOCATION: ~/.m2
    NPM_CONFIG_LOCATION: '~'
    DOCKER_CONFIG_LOCATION: ~/.docker

default:
    before_script:
        - MAVEN_CONFIG_LOCATION="${MAVEN_CONFIG_LOCATION/#\~/$HOME}"
        - mkdir -p $MAVEN_CONFIG_LOCATION
        - echo "$NUMAHOP_MAVEN_CONFIG" > $MAVEN_CONFIG_LOCATION/settings.xml
        - NPM_CONFIG_LOCATION="${NPM_CONFIG_LOCATION/#\~/$HOME}"
        - mkdir -p $NPM_CONFIG_LOCATION
        - echo "$NUMAHOP_NPM_CONFIG" > $NPM_CONFIG_LOCATION/.npmrc
        - DOCKER_CONFIG_LOCATION="${DOCKER_CONFIG_LOCATION/#\~/$HOME}"
        - mkdir -p $DOCKER_CONFIG_LOCATION
        - echo "$NUMAHOP_DOCKER_CONFIG" > $DOCKER_CONFIG_LOCATION/config.json
        - set -x

stages:
    - prepare
    - compile
    - test
    - package
    - deploy

build-version:
    image: bash
    stage: prepare
    artifacts:
        reports:
            dotenv: version.env
    script:
        - TIMESTAMP="$(date -u +"%Y%m%d-%H%M%S")"
        - GITHASH="${CI_COMMIT_SHA:0:8}"
        - echo "VERSION=$TIMESTAMP.$GITHASH" > version.env

build-base-images:
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: ['']
    stage: prepare
    needs:
        - build-version
    variables:
        DOCKER_CONFIG_LOCATION: /kaniko/.docker
    artifacts:
        reports:
            dotenv: images.env
    script:
        - >
            if [ -n "$NUMAHOP_DOCKER_MIRROR_REPO" ]; then
              MIRROR_REPO="--registry-mirror $NUMAHOP_DOCKER_MIRROR_REPO"
            fi
        - >
            for TARGET in run build; do
              IMAGE="$NUMAHOP_DOCKER_TMP_REPO/numahop:$VERSION-$TARGET"
              /kaniko/executor \
                  --context src/main/docker \
                  --target "$TARGET" \
                  --destination "$IMAGE" \
                  $MIRROR_REPO \
                  --cleanup \
                  --cache=true \
                  --skip-unused-stages
              echo "$(echo $TARGET | tr [:lower:] [:upper:])_IMAGE=$IMAGE" >> images.env
            done

compile:
    image: $BUILD_IMAGE
    stage: compile
    needs:
        - build-base-images
    artifacts:
        paths:
            - target
        expire_in: 1 day
    script:
        - mvn $MAVEN_CLI_OPTS -P webapp compile

test:
    image: $BUILD_IMAGE
    stage: test
    needs:
        - build-base-images
        - compile
    artifacts:
        when: always
        paths:
            - target/surefire-reports
            - target/failsafe-reports
            - target/site/jacoco-ut/jacoco.xml
        reports:
            junit:
                - target/surefire-reports/*.xml
                - target/failsafe-reports/*.xml
        expire_in: 10 days
    script:
        - mvn $MAVEN_CLI_OPTS verify -Dmaven.main.skip=true

package:
    image: $BUILD_IMAGE
    stage: package
    needs:
        - build-version
        - build-base-images
        - compile
        - job: test
          artifacts: false
    artifacts:
        reports:
            dotenv: image.env
    script:
        - NUMAHOP_IMAGE="$NUMAHOP_DOCKER_RESULT_REPO/numahop:$VERSION"
        - mvn $MAVEN_CLI_OPTS jib:build -Djib.from.image="$RUN_IMAGE" -Djib.to.image="$NUMAHOP_IMAGE"
        - echo "NUMAHOP_IMAGE=$NUMAHOP_IMAGE" >> image.env
        - cat image.env

deploy:
    stage: deploy
    needs:
        - package
    rules:
        - if: $NUMAHOP_DEPLOY_PROJECT && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    variables:
        NUMAHOP_IMAGE: $NUMAHOP_IMAGE
    trigger: $NUMAHOP_DEPLOY_PROJECT
